CONTEXT "ProjectAdministration" IN ENGLISH
  -- INCLUDE "ProjectAdministration.xlsx"
  
  INCLUDE "ProjectLeader.ifc"

--[ Conceptual model (including concepts and relations) ]----------------------
  CONCEPT Project "Planned set of interrelated tasks"
    projectName           :: Project * ProjectName [UNI,TOT]
    projectStatus         :: Project * ProjectStatus [UNI,TOT] DEFAULT TGT VALUE "In preparation"
    projectDescription    :: Project * Description [UNI]
    projectStartDate      :: Project * Date [UNI]
    projectActive         :: Project * Project [PROP]
    projectKeyword        :: Project * Keyword
    pl                    :: Project * Person [UNI]
    member                :: Project * Person
  
  CONCEPT Person "Person"
    personFirstName       :: Person * FirstName [UNI]
    personLastName        :: Person * LastName [UNI]
    personStatus          :: Person * PersonStatus [UNI] DEFAULT TGT VALUE "Test"
    personEmail           :: Person * Email [UNI]
    workswith             :: Person * Person [IRF,SYM]
  
  REPRESENT Date TYPE DATE
  REPRESENT ProjectName, ProjectStatus, Keyword TYPE ALPHANUMERIC
  REPRESENT FirstName, LastName, PersonStatus, Email TYPE ALPHANUMERIC
  REPRESENT Description TYPE BIGALPHANUMERIC

--[ Invariant rules ]----------------------------------------------------------
  RULE "r1" : I[Project] |- projectName;projectName~
  MEANING "Every project MUST have a name"
  MESSAGE "There are projects that don't have a name"
  VIOLATION ( TXT "Project "
            , SRC I
            , TXT " does not have a name"
            )
  ROLE "Planner" MAINTAINS "r1"

  RULE "Active projects must have a projectleader" : projectActive |- I /\ pl;pl~
  
  ROLE "ExecEngine" MAINTAINS "Every projectleader is also projectmember"
  RULE "Every projectleader is also projectmember" : pl |- member
  VIOLATION (TXT "{EX}InsPair;member;Project;", SRC I, TXT ";Person;", TGT I)
  

--[ Public interfaces ]--------------------------------------------------------
  INTERFACE "Active projects" : V[SESSION*Project];projectActive BOX <TABLE sortable sortBy="Name" order="desc">
    [ "Projects"      : I[Project]
    , "Name"          : projectName
    , "Description"   : projectDescription
    , "Projectleider" : pl
    , "@"             : pl[Project*Person]
    , "Start"         : projectStartDate
    , "Status"        : projectStatus
    , "Active"        : projectActive
    ]
  
  INTERFACE "Project" : I[Project] cRud BOX <FORM title="Project form" showNavMenu>
    [ "Name"                : projectName
    , "Description"         : projectDescription
    , "(Planned) start date": projectStartDate
    , "Status"              : projectStatus
    , "Active"              : projectActive
    , "Current PL"          : pl
    , "Project members"     : member BOX <TABLE title="Project members">
      [ "Name"              : personFirstName
      , "Email"             : personEmail
      ]
    ]
    
  INTERFACE "Person"    : I[Person] CRuD BOX <FORM>
    [ "First name"      : personFirstName RU
    , "Last name"       : personLastName RU
    , "Status"          : personStatus RU
    , "Email"           : personEmail RU
    , "Projects"        : I BOX <TABS>
      [ "Active"        : (member~ \/ pl~);projectActive
      , "Inactive"      : (member~ \/ pl~);(-projectActive)
      ]
    , "Works with"      : workswith
    ]
  
--[ Interfaces for planner ]---------------------------------------------------
  INTERFACE "Inactive projects" FOR "Planner" : V[SESSION*Project];(-(projectActive) /\ I) BOX <TABLE noHeader noRootTitle>
    [ "Name"            : I
    , "Description"     : projectDescription
    , "Projectleider"   : pl RU
    , "Status"          : projectStatus
    , "Active"          : projectActive RU
    ]
  
  INTERFACE "People"  FOR "Planner" : V[SESSION*Person]   CRuD BOX
    [ "Person"          : I[Person]
    , "Email"           : personEmail
    , "Projects"        : member~ 
    ]
  
  VIEW "ProjectName" : Project DEFAULT { name : projectName } ENDVIEW
  VIEW "PersonName"     : Person DEFAULT { firstName : personFirstName, txt1: TXT " ", lastName : personLastName } ENDVIEW
  
ENDCONTEXT